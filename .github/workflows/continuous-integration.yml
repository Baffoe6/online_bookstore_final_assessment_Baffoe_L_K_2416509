name: Continuous Integration

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job 1: Quick validation
  validate:
    name: Quick Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Syntax check
      run: |
        python -m py_compile app_refactored.py models_refactored.py services.py config.py
    
    - name: Import check
      run: |
        python -c "import app_refactored; import models_refactored; import services; import config"
    
    - name: Validation summary
      run: |
        echo "::notice title=Validation::Quick validation passed"

  # Job 2: Run all tests
  test:
    name: Run Test Suite
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
    
    - name: Run tests
      run: |
        pytest tests/ -v --tb=short --junitxml=junit/test-results.xml --cov=. --cov-report=xml
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-ci
        path: junit/test-results.xml
        retention-days: 30
    
    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: ci
        name: ci-coverage

  # Job 3: Build Docker image
  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: bookstore/online-bookstore:ci-${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test Docker image
      run: |
        docker build -t test-image .
        docker run --rm test-image python -c "import app_refactored; print('✅ Docker image working')"

  # Job 4: Integration summary
  ci-summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [validate, test, build-docker]
    if: always()
    
    steps:
    - name: Check job results
      run: |
        echo "==================================================="
        echo "CONTINUOUS INTEGRATION SUMMARY"
        echo "==================================================="
        echo "Validation: ${{ needs.validate.result }}"
        echo "Tests: ${{ needs.test.result }}"
        echo "Docker Build: ${{ needs.build-docker.result }}"
        echo "==================================================="
        
        if [ "${{ needs.validate.result }}" == "success" ] && \
           [ "${{ needs.test.result }}" == "success" ] && \
           [ "${{ needs.build-docker.result }}" == "success" ]; then
          echo "::notice title=CI Success::All CI jobs completed successfully ✅"
          exit 0
        else
          echo "::error title=CI Failed::One or more CI jobs failed ❌"
          exit 1
        fi

