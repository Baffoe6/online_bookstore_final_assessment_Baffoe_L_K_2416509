name: 4. Code Quality

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: Linting & Type Checking
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pylint black isort mypy bandit safety
    
    - name: Run Black (code formatting)
      run: |
        black --check --diff . || echo "::warning title=Black::Code formatting issues detected"
      continue-on-error: true
    
    - name: Run isort (import sorting)
      run: |
        isort --check-only --diff . || echo "::warning title=isort::Import order issues detected"
      continue-on-error: true
    
    - name: Run Flake8 (style guide)
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run Pylint (static analysis)
      run: |
        pylint app_refactored.py models_refactored.py services.py config.py --exit-zero --rcfile=.pylintrc || true
      continue-on-error: true
    
    - name: Run MyPy (type checking)
      run: |
        mypy . --config-file=mypy.ini --ignore-missing-imports || echo "::warning title=MyPy::Type checking issues detected"
      continue-on-error: true
    
    - name: Run Bandit (security linting)
      run: |
        bandit -r . -ll -x ./tests/,./venv/ || echo "::warning title=Bandit::Security issues detected"
      continue-on-error: true
    
    - name: Check dependencies for vulnerabilities
      run: |
        safety check --json || echo "::warning title=Safety::Dependency vulnerabilities detected"
      continue-on-error: true
    
    - name: Quality Summary
      run: |
        echo "::notice title=Code Quality::All code quality checks completed"

  complexity:
    name: Code Complexity Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install radon
      run: |
        pip install radon
    
    - name: Cyclomatic Complexity
      run: |
        radon cc . -a -nb | tee complexity-report.txt
    
    - name: Maintainability Index
      run: |
        radon mi . -nb | tee -a complexity-report.txt
    
    - name: Upload complexity report
      uses: actions/upload-artifact@v4
      with:
        name: complexity-report
        path: complexity-report.txt
        retention-days: 30

